# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestQuizprecondition():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.driver.implicitly_wait(10)
        self.driver.set_page_load_timeout(3000)
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()
        pass

    def exit_help_modal(self, driver):
        # Create an ActionChains object
        actions = ActionChains(driver)
        # Send the ESC key to exit the help modal
        actions.send_keys(Keys.ESCAPE).perform()
        actions.send_keys(Keys.ESCAPE).perform()

    def test_quizprecondition(self):
        self.driver.get("https://sandbox404.moodledemo.net/")
        self.driver.set_window_size(1213, 1032)
        self.driver.find_element(By.CSS_SELECTOR, ".login > a").click()
        time.sleep(3)
        self.driver.find_element(By.ID, "username").clear()
        self.driver.find_element(By.ID, "username").send_keys("teacher")
        self.driver.find_element(By.ID, "password").send_keys("sandbox24")
        time.sleep(1)
        self.driver.find_element(By.ID, "loginbtn").click()
        time.sleep(3)
        self.driver.find_element(By.LINK_TEXT, "My courses").click()
        self.driver.find_element(By.CSS_SELECTOR, ".h2").click()
        self.driver.find_element(By.XPATH, "//h1[contains(.,\'My courses\')]").click()
        element = self.driver.find_element(By.XPATH, "//h1[contains(.,\'My courses\')]")
        actions = ActionChains(self.driver)
        actions.double_click(element).perform()
        time.sleep(3)
        self.driver.find_element(By.CSS_SELECTOR, ".h2").click()
        self.driver.find_element(By.XPATH,
                                 "//div[contains(@class,'course-info-container')]//a//span[contains(@title,'My first course')]").click()
        time.sleep(3)
        self.exit_help_modal(self.driver)
        self.driver.find_element(By.XPATH, "//h1[contains(.,\'My first course\')]").click()
        element = self.driver.find_element(By.XPATH, "//h1[contains(.,\'My first course\')]")
        actions = ActionChains(self.driver)
        actions.double_click(element).perform()
        self.driver.find_element(By.NAME, "setmode").click()
        time.sleep(2)

        self.exit_help_modal(self.driver)

        self.driver.find_element(By.XPATH, "//h1[contains(.,\'My first course\')]").click()
        self.driver.find_element(By.CSS_SELECTOR, ".h2").click()
        element = self.driver.find_element(By.XPATH, "//h1[contains(.,\'My first course\')]")
        actions = ActionChains(self.driver)
        actions.double_click(element).perform()
        self.driver.find_element(By.CSS_SELECTOR, "#coursecontentcollapse1 .activity-add-text").click()
        time.sleep(2)
        self.driver.find_element(By.XPATH, "//div[contains(@id, 'all')]//div[contains(@data-internal,'quiz')]//a[contains(@title,'Add a new Quiz')]").click()
        self.driver.find_element(By.ID, "id_name").click()
        self.driver.find_element(By.ID, "id_name").send_keys("1")
        self.driver.find_element(By.ID, "collapseElement-3").click()
        self.driver.find_element(By.ID, "id_questionsperpage").click()
        dropdown = self.driver.find_element(By.ID, "id_questionsperpage")
        dropdown.find_element(By.XPATH, ".//option[. = 'Never, all questions on one page']").click()
        self.driver.find_element(By.CSS_SELECTOR, "html").click()
        self.driver.find_element(By.CSS_SELECTOR, "html").click()
        self.driver.find_element(By.ID, "id_submitbutton").click()
        self.driver.find_element(By.LINK_TEXT, "Add question").click()
        time.sleep(3)
        self.driver.find_element(By.XPATH, "//a[@id=\'action-menu-toggle-1\']/span").click()
        self.driver.find_element(By.XPATH, "//a[contains(.,\' a new question\')]").click()
        self.driver.find_element(By.ID, "item_qtype_calculated").click()
        self.driver.find_element(By.NAME, "submitbutton").click()
        time.sleep(3)
        self.driver.find_element(By.ID, "id_name").click()
        self.driver.find_element(By.ID, "id_name").send_keys("1")

        self.driver.switch_to.frame("id_questiontext_ifr")
        self.driver.find_element(By.CSS_SELECTOR, "html").click()
        element = self.driver.find_element(By.ID, "tinymce")
        self.driver.execute_script(
            "if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>area {w} * {h}, no unit</p>'}",
            element)
        self.driver.switch_to.default_content()

        self.driver.find_element(By.ID, "id_answer_0").click()
        self.driver.find_element(By.ID, "id_answer_0").send_keys("{w} * {h}")
        self.driver.find_element(By.ID, "id_fraction_0").click()
        dropdown = self.driver.find_element(By.ID, "id_fraction_0")
        dropdown.find_element(By.XPATH, ".//option[. = '100%']").click()
        self.driver.find_element(By.ID, "id_tolerancetype_0").click()
        dropdown = self.driver.find_element(By.ID, "id_tolerancetype_0")
        dropdown.find_element(By.XPATH, ".//option[. = 'Nominal']").click()
        self.driver.find_element(By.ID, "collapseElement-2").click()
        self.driver.find_element(By.ID, "id_unitrole").click()
        dropdown = self.driver.find_element(By.ID, "id_unitrole")
        dropdown.find_element(By.XPATH,
                              ".//option[. = 'Units are optional. If a unit is entered, it is used to convert the response to Unit 1 before grading.']").click()
        self.driver.find_element(By.ID, "collapseElement-3").click()
        self.driver.find_element(By.ID, "id_unit_0").click()
        self.driver.find_element(By.ID, "id_unit_0").send_keys("cm")
        self.driver.find_element(By.ID, "id_submitbutton").click()
        self.driver.find_element(By.ID, "id_synchronize_1").click()
        self.driver.find_element(By.ID, "id_submitbutton").click()
        time.sleep(3)
        self.driver.find_element(By.CSS_SELECTOR, "#fitem_id_number_1 > .col-md-9").click()
        self.driver.find_element(By.ID, "id_addbutton").click()
        time.sleep(3)
        self.driver.find_element(By.ID, "id_number_2").clear()
        self.driver.find_element(By.ID, "id_number_2").send_keys("3.7")
        self.driver.find_element(By.ID, "fitem_id_number_1").click()
        self.driver.find_element(By.ID, "id_number_1").clear()
        self.driver.find_element(By.ID, "id_number_1").send_keys("6.6")
        self.driver.find_element(By.ID, "page-content").click()
        self.driver.find_element(By.ID, "id_savechanges").click()
        time.sleep(3)
        self.driver.find_element(By.XPATH, "//a[@id=\'action-menu-toggle-2\']/span").click()
        self.driver.find_element(By.XPATH, "//div[2]/span/div/div/div/div/a/span").click()
        self.driver.find_element(By.ID, "item_qtype_calculated").click()
        self.driver.find_element(By.NAME, "submitbutton").click()
        time.sleep(3)
        self.driver.find_element(By.ID, "id_name").click()
        self.driver.find_element(By.ID, "id_name").send_keys("2")

        self.driver.switch_to.frame("id_questiontext_ifr")
        self.driver.find_element(By.CSS_SELECTOR, "html").click()
        element = self.driver.find_element(By.ID, "tinymce")
        self.driver.execute_script(
            "if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>area {w} * {h}, unit cm</p>'}",
            element)
        self.driver.find_element(By.CSS_SELECTOR, "html").click()
        self.driver.switch_to.default_content()

        self.driver.find_element(By.ID, "id_answer_0").click()
        self.driver.find_element(By.ID, "id_answer_0").send_keys("{w} * {h}")
        self.driver.find_element(By.ID, "id_fraction_0").click()
        dropdown = self.driver.find_element(By.ID, "id_fraction_0")
        dropdown.find_element(By.XPATH, ".//option[. = '100%']").click()
        self.driver.find_element(By.ID, "id_tolerancetype_0").click()
        dropdown = self.driver.find_element(By.ID, "id_tolerancetype_0")
        dropdown.find_element(By.XPATH, ".//option[. = 'Nominal']").click()
        self.driver.find_element(By.ID, "collapseElement-2").click()
        self.driver.find_element(By.ID, "id_unitrole").click()
        dropdown = self.driver.find_element(By.ID, "id_unitrole")
        dropdown.find_element(By.XPATH, ".//option[. = 'The unit must be given, and will be graded.']").click()
        self.driver.find_element(By.ID, "collapseElement-3").click()
        self.driver.find_element(By.ID, "id_unit_0").click()
        self.driver.find_element(By.ID, "id_unit_0").send_keys("cm")
        self.driver.find_element(By.ID, "id_submitbutton").click()
        self.driver.find_element(By.ID, "id_synchronize_1").click()
        time.sleep(3)
        self.driver.find_element(By.ID, "id_submitbutton").click()
        time.sleep(3)
        self.driver.find_element(By.ID, "id_addbutton").click()
        time.sleep(3)
        self.driver.find_element(By.ID, "fitem_id_number_2").click()
        self.driver.find_element(By.ID, "id_number_2").clear()
        self.driver.find_element(By.ID, "id_number_2").send_keys("3.7")
        self.driver.find_element(By.ID, "fitem_id_number_1").click()
        self.driver.find_element(By.ID, "id_number_1").clear()
        self.driver.find_element(By.ID, "id_number_1").send_keys("6.6")
        self.driver.find_element(By.ID, "id_savechanges").click()
        time.sleep(3)
        self.driver.find_element(By.LINK_TEXT, "Quiz").click()
        time.sleep(3)
        self.driver.find_element(By.NAME, "setmode").click()
        time.sleep(3)
        self.driver.find_element(By.ID, "user-menu-toggle").click()
        self.driver.find_element(By.LINK_TEXT, "Log out").click()
