# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestUsecase7():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_usecase7(self):
    self.driver.get("https://sandbox404.moodledemo.net/")
    self.driver.find_element(By.CSS_SELECTOR, ".login > a").click()
    self.driver.find_element(By.ID, "username").send_keys("student")
    self.driver.find_element(By.ID, "password").send_keys("sandbox24")
    self.driver.find_element(By.ID, "password").send_keys("sandbox24")
    self.driver.find_element(By.CSS_SELECTOR, ".login-container").click()
    self.driver.find_element(By.ID, "password").send_keys("sandbox24")
    self.driver.find_element(By.ID, "loginbtn").click()
    time.sleep(3000)
    self.driver.find_element(By.LINK_TEXT, "Dashboard").click()
    self.vars["month"] = self.driver.find_element(By.CSS_SELECTOR, ".current:nth-child(3)").text
    if self.driver.execute_script("return (arguments[0] != \"November 2024\")", self.vars["month"]):
      assert self.driver.find_element(By.CSS_SELECTOR, ".arrow_text:nth-child(2)").text == "November"
      self.driver.find_element(By.CSS_SELECTOR, ".arrow_text:nth-child(2)").click()
    self.driver.find_element(By.XPATH, "//button[contains(.,\'New event\')]").click()
    self.driver.find_element(By.ID, "id_name").send_keys("Testing")
    self.driver.find_element(By.ID, "id_timestart_day").click()
    dropdown = self.driver.find_element(By.ID, "id_timestart_day")
    dropdown.find_element(By.XPATH, "//option[. = '11']").click()
    self.driver.find_element(By.ID, "id_timestart_month").click()
    self.driver.find_element(By.ID, "id_timestart_year").click()
    self.driver.find_element(By.ID, "id_timestart_hour").click()
    dropdown = self.driver.find_element(By.ID, "id_timestart_hour")
    dropdown.find_element(By.XPATH, "//option[. = '08']").click()
    self.driver.find_element(By.ID, "id_timestart_minute").click()
    dropdown = self.driver.find_element(By.ID, "id_timestart_minute")
    dropdown.find_element(By.XPATH, "//option[. = '00']").click()
    self.driver.find_element(By.LINK_TEXT, "Show more...").click()
    self.driver.switch_to.frame(0)
    self.driver.find_element(By.CSS_SELECTOR, "p").click()
    element = self.driver.find_element(By.ID, "tinymce")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Testing event</p>'}", element)
    self.driver.switch_to.default_content()
    self.driver.find_element(By.ID, "id_location").send_keys("School")
    self.driver.find_element(By.ID, "id_duration_0").click()
    self.driver.find_element(By.ID, "id_repeat").click()
    self.driver.find_element(By.ID, "fitem_id_repeats").click()
    self.driver.find_element(By.ID, "id_repeats").send_keys("2")
    self.driver.find_element(By.XPATH, "//button[contains(.,\'Save\')]").click()
    self.driver.find_element(By.XPATH, "//li/a/span[2]").click()
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(1) > .col-11").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".dimmed_text").text == "Monday, 11 November, 8:00 AM"
    assert self.driver.find_element(By.CSS_SELECTOR, ".description-content > p").text == "Testing event"
    assert self.driver.find_element(By.CSS_SELECTOR, ".location-content").text == "School"
    self.driver.find_element(By.XPATH, "//div[2]/div/div/div[3]/button").click()
    self.driver.find_element(By.XPATH, "//button[contains(.,\'Delete this event\')]").click()
    self.driver.find_element(By.XPATH, "//tr[4]/td[2]/div/div/ul/li/a/span[2]").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".dimmed_text").text == "Monday, 18 November, 8:00 AM"
    assert self.driver.find_element(By.CSS_SELECTOR, ".description-content > p").text == "Testing event"
    assert self.driver.find_element(By.CSS_SELECTOR, ".location-content").text == "School"
    self.driver.find_element(By.XPATH, "//div[2]/div/div/div[3]/button").click()
    self.driver.find_element(By.XPATH, "//button[contains(.,\'Delete event\')]").click()
    self.driver.find_element(By.ID, "user-menu-toggle").click()
    self.driver.find_element(By.XPATH, "//a[contains(.,\'Log out\')]").click()
  
